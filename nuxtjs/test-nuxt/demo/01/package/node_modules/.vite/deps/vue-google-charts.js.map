{
  "version": 3,
  "sources": ["../../vue-google-charts/src/lib/google-charts-loader.ts", "../../vue-google-charts/src/utils.ts", "../../vue-google-charts/src/lib/debounce.ts", "../../vue-google-charts/src/components/GChart.ts", "../../vue-google-charts/src/index.ts", "dep:vue-google-charts"],
  "sourcesContent": ["/**\n * Usage:\n * import { loadGoogleCharts } from 'vue-google-charts'\n *\n * loadGoogleCharts('current', { packages: ['corechart', 'map'] })\n *  .then(google => {\n *    const chart = new google.visualization.Map ...\n *  })\n */\n\nimport type {\n  GoogleViz,\n  GoogleChartLoader,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n} from '../types';\n\nconst chartsScriptUrl = 'https://www.gstatic.com/charts/loader.js';\n\nlet chartsLoaderPromise: null | Promise<GoogleChartLoader> = null;\n\nconst loadedPackages = new Map();\n\nexport function getChartsLoader(): Promise<GoogleChartLoader> {\n  // If already included in the page:\n  if (window.google !== undefined) {\n    return Promise.resolve(window.google.charts);\n  }\n\n  if (chartsLoaderPromise === null) {\n    chartsLoaderPromise = new Promise(resolve => {\n      // Find script tag with same src in DOM.\n      const foundScript = document.querySelector<HTMLScriptElement>(\n        `script[src=\"${chartsScriptUrl}\"]`\n      );\n\n      // Create or get existed tag.\n      const script = foundScript || document.createElement('script');\n\n      // Set src if no script was found.\n      if (!foundScript) {\n        script.src = chartsScriptUrl;\n        script.type = 'text/javascript';\n\n        document.head.append(script);\n      }\n\n      script.onload = () => {\n        if (window.google !== undefined) {\n          resolve(window.google.charts);\n        }\n      };\n    });\n  }\n\n  return chartsLoaderPromise;\n}\n\n/**\n * Function to load Google Charts JS API.\n * @param version - Chart version to load.\n * @param packages - Packages to load.\n * @param language - Languages to load.\n * @param mapsApiKey - Google Maps api key.\n * @returns\n */\nexport async function loadGoogleCharts(\n  version: GoogleChartVersion = 'current',\n  {\n    packages = ['corechart', 'controls'],\n    language = 'en',\n    mapsApiKey,\n  }: GoogleChartLoaderOptions\n): Promise<GoogleViz | undefined> {\n  const loader = await getChartsLoader();\n\n  const settingsKey = `${version}_${packages.join('_')}_${language}`;\n\n  if (loadedPackages.has(settingsKey)) return loadedPackages.get(settingsKey);\n\n  const loaderPromise: Promise<GoogleViz | undefined> = new Promise(resolve => {\n    loader.load(version, {\n      packages,\n      language,\n      mapsApiKey,\n    });\n\n    loader.setOnLoadCallback(() => resolve(window.google));\n  });\n\n  loadedPackages.set(settingsKey, loaderPromise);\n\n  return loaderPromise;\n}\n", "import {\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleDataTable,\n  GoogleDataView,\n  GoogleViz,\n  GoogleVizEventName,\n  GoogleVizEvents,\n} from './types';\n\nexport interface ICreateChartFunction {\n  (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper;\n}\n\nexport function getValidChartData(\n  chartsLib: null | GoogleViz,\n  data: unknown[][] | GoogleDataTable | Record<string, any> | null,\n  isFirstRowLabels?: boolean\n): GoogleDataTable | GoogleDataView | null {\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataTable) {\n    return data;\n  }\n\n  if (chartsLib !== null && data instanceof chartsLib.visualization.DataView) {\n    return data;\n  }\n\n  if (chartsLib !== null && Array.isArray(data)) {\n    return chartsLib.visualization.arrayToDataTable(data, isFirstRowLabels);\n  }\n\n  if (chartsLib !== null && data !== null && typeof data === 'object') {\n    return new chartsLib.visualization.DataTable(data);\n  }\n\n  return null;\n}\n\nexport function createChartObject(\n  chartsLib: GoogleViz | null,\n  chartObject: GoogleChartWrapper | null,\n  chartEl: HTMLElement | null,\n  chartType: GoogleChartWrapperChartType,\n  chartEvents: GoogleVizEvents | null,\n  createChartFunction?: ICreateChartFunction\n): GoogleChartWrapper | null {\n  const createChart: ICreateChartFunction = (\n    el: HTMLElement,\n    google: GoogleViz,\n    type: GoogleChartWrapperChartType\n  ): GoogleChartWrapper => {\n    if (type === undefined) {\n      throw new Error('please, provide chart type property');\n    }\n\n    return new google.visualization[type](el);\n  };\n\n  if (chartsLib === null) {\n    throw new Error('please, provide charts lib property');\n  }\n\n  if (chartEl === null) {\n    throw new Error('please, provide chart element property');\n  }\n\n  const fn = createChartFunction || createChart;\n\n  chartObject = fn(chartEl, chartsLib, chartType);\n\n  attachListeners(chartsLib, chartObject, chartEvents);\n\n  return chartObject;\n}\n\nfunction attachListeners(\n  chartsLib: null | GoogleViz,\n  chartObject: GoogleChartWrapper | null,\n  chartEvents: GoogleVizEvents | null\n): void {\n  if (chartEvents === null) {\n    return;\n  }\n\n  for (const [event, listener] of Object.entries(chartEvents)) {\n    if (chartsLib !== null && chartObject !== null) {\n      chartsLib.visualization.events.addListener(\n        chartObject,\n        event as GoogleVizEventName,\n        listener as (chartWrapper: GoogleChartWrapper) => any\n      );\n    }\n  }\n}\n", "export interface DebouncedFunction<\n  Args extends any[],\n  F extends (...args: Args) => any\n> {\n  (this: ThisParameterType<F>, ...args: Args & Parameters<F>): void;\n}\n\nexport function debounce<Args extends any[], F extends (...args: Args) => any>(\n  func: F,\n  waitMilliseconds = 50\n): DebouncedFunction<Args, F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  function nextInvokeTimeout() {\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n\n    const invokeFunction = function () {\n      timeoutId = undefined;\n\n      func.apply(context, args);\n    };\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n  };\n\n  return debouncedFunction;\n}\n", "import {\n  defineComponent,\n  ref,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  PropType,\n} from 'vue';\n\nimport {\n  GoogleViz,\n  GoogleChartWrapper,\n  GoogleChartWrapperChartType,\n  GoogleChartOptions,\n  GoogleChartVersion,\n  GoogleChartLoaderOptions,\n  GoogleVizEvents,\n  GoogleDataTable,\n} from '../types';\n\nimport {\n  createChartObject,\n  getValidChartData,\n  ICreateChartFunction,\n} from '../utils';\n\nimport { loadGoogleCharts } from '../lib/google-charts-loader';\nimport { debounce } from '../lib/debounce';\n\nlet chartsLib: null | GoogleViz = null;\n\nexport const GChart = defineComponent({\n  name: 'GChart',\n  props: {\n    type: {\n      type: String as PropType<GoogleChartWrapperChartType>,\n      required: true,\n    },\n    data: {\n      type: [Array, Object, null] as PropType<\n        unknown[][] | GoogleDataTable | Record<string, any> | null\n      >,\n      default: () => [],\n    },\n    isFirstRowLabels: {\n      type: Boolean,\n      default: false,\n    },\n    options: {\n      type: Object as PropType<GoogleChartOptions>,\n      default: () => ({}),\n    },\n    version: {\n      type: String as PropType<GoogleChartVersion>,\n      default: 'current',\n    },\n    settings: {\n      type: Object as PropType<GoogleChartLoaderOptions>,\n      default: () => ({\n        packages: ['corechart', 'table'],\n      }),\n    },\n    events: {\n      type: Object as PropType<GoogleVizEvents | null>,\n      default: null,\n    },\n    createChart: {\n      type: Function as PropType<ICreateChartFunction>,\n      default: undefined,\n    },\n    resizeDebounce: {\n      type: Number,\n      default: 200,\n    },\n  },\n  setup(props, { emit }) {\n    const chartObject = ref<GoogleChartWrapper | null>(null);\n    const chartEl = ref<HTMLElement | null>(null);\n\n    function drawChart(): void {\n      if (chartsLib === null || chartObject.value === null) {\n        return;\n      }\n\n      const data = getValidChartData(\n        chartsLib,\n        props.data,\n        props.isFirstRowLabels\n      );\n      if (data !== null) {\n        chartObject.value?.draw(data, props.options);\n      }\n    }\n\n    watch(\n      () => props.data,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.options,\n      () => drawChart(),\n      { deep: true }\n    );\n\n    watch(\n      () => props.type,\n      () => {\n        chartObject.value = createChartObject(\n          chartsLib,\n          chartObject.value,\n          chartEl.value,\n          props.type,\n          props.events,\n          props.createChart\n        );\n\n        drawChart();\n      }\n    );\n\n    onMounted(() => {\n      loadGoogleCharts(props.version, props.settings).then(api => {\n        if (api !== undefined) {\n          chartsLib = api;\n\n          chartObject.value = createChartObject(\n            chartsLib,\n            chartObject.value,\n            chartEl.value,\n            props.type,\n            props.events,\n            props.createChart\n          );\n\n          emit('ready', chartObject.value, api);\n\n          drawChart();\n        }\n      });\n\n      if (props.resizeDebounce > 0) {\n        window.addEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (\n        chartObject.value !== null &&\n        typeof chartObject.value.clearChart === 'function'\n      ) {\n        chartObject.value.clearChart();\n      }\n\n      if (props.resizeDebounce > 0) {\n        window.removeEventListener(\n          'resize',\n          debounce(drawChart, props.resizeDebounce) as EventListener\n        );\n      }\n    });\n\n    return () => h('div', { ref: chartEl }, []);\n  },\n});\n", "import { createApp } from 'vue';\n\nimport { loadGoogleCharts } from './lib/google-charts-loader';\nimport { GChart } from './components/GChart';\n\nconst app = createApp({});\n\n// Install the components\nexport function install() {\n  app.component('GChart', GChart);\n}\n\n// Expose the components\nexport { loadGoogleCharts, GChart };\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nconst plugin = {\n  version: process.env.VERSION,\n  install,\n};\n\nexport default plugin;\n\n// Auto-install\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n}\n\nif (GlobalVue !== null && GlobalVue !== undefined) {\n  app.use(plugin);\n}\n", "import d from \"./node_modules/vue-google-charts/dist/index.js\";export default d;\nexport * from \"./node_modules/vue-google-charts/dist/index.js\""],
  "mappings": "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",
  "names": []
}
